{"name":"riscv-qemu","tagline":"QEMU with RISC-V Emulation Support","body":"riscv-qemu [![Build Status](https://travis-ci.org/ucb-bar/riscv-qemu.svg?branch=master)](https://travis-ci.org/ucb-bar/riscv-qemu)\r\n=========\r\n\r\nThe riscv-softmmu target for full system emulation is currently supported. \r\nIt supports booting [riscv-linux] \\(currently requires building from the \r\n[qemu branch]\\). A precompiled copy of the kernel is included in the \"hacking\" \r\ndirectory for convenience (see Method 1 under installation).\r\n\r\nInstallation \r\n--------------\r\n\r\n### Method 1 \\(the quick way\\):\r\n\r\nA sample kernel with an initramfs is included in the \"hacking\"\r\ndirectory. You can easily test out riscv-qemu this way:\r\n\r\n```sh\r\n$ git clone git@github.com:ucb-bar/riscv-qemu.git\r\n$ cd riscv-qemu\r\n$ git submodule update --init pixman\r\n$ ./configure --target-list=riscv-softmmu\r\n$ make\r\n$ cd riscv-softmmu\r\n$ # now, start qemu\r\n$ ./qemu-system-riscv -kernel ../hacking/vmlinux/vmlinux -nographic\r\n```\r\n\r\nTo exit this system, hit `ctrl-a x`.\r\n\r\n### Method 2 \\(system with persistent storage\\): \r\n\r\nBooting from a block device is also supported. A more extensive guide for \r\nconfiguring the kernel/building a root fs will be available soon.\r\n\r\n####Step 1:\r\n\r\n```sh\r\n$ git clone git@github.com:ucb-bar/riscv-qemu.git\r\n$ cd riscv-qemu\r\n$ git submodule update --init pixman\r\n$ ./configure --target-list=riscv-softmmu\r\n$ make\r\n$ cd riscv-softmmu\r\n```\r\n\r\n####Step 2:\r\n\r\nInstructions for the following two steps are coming soon:\r\n\r\n**a)** Build linux kernel from the qemu branch of riscv-linux with htif block device support.\r\n\r\n**b)** Build the `root.bin` root filesystem.\r\n\r\n\r\n####Step 3:\r\n\r\nNow from the `riscv-softmmu/` directory, start `qemu-system-riscv`:\r\n\r\n```sh\r\n$ ./qemu-system-riscv -hda [your root.bin location] -kernel [your vmlinux location] -nographic\r\n```\r\n\r\n**IMPORTANT**: To cleanly exit this system, you must enter `halt -f` at the prompt\r\nand then hit `ctrl-a x`. Otherwise, the root filesystem will likely be corrupted.\r\n\r\nNotes\r\n-----\r\n\r\n- Qemu also supports a \"linux-user\" mode, however this is currently not implemented for RISC-V.\r\n- Once in a while, you may see a message from qemu of the form `main-loop: WARNING: I/O thread spun for N iterations`. You may safely ignore this message without consequence.\r\n- Files/directories of interest:\r\n  - target-riscv/\r\n  - hw/riscv/\r\n\r\n[riscv-linux]:https://github.com/ucb-bar/riscv-linux\r\n[qemu branch]:https://github.com/ucb-bar/riscv-linux/tree/qemu\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}